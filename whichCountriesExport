import edu.duke.*;
import org.apache.commons.csv.*;
/**
 * Write a description of WhichCountriesExport here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class WhichCountriesExport {
    public void listExporters(CSVParser parser, String exportOfInterest){
        for (CSVRecord record : parser) {
   String export = record.get("Exports");
   if (export.contains(exportOfInterest)) {
     String country = record.get("Country");
     System.out.println(country);
   }
  }
}
public void whoExportsCoffee() {
FileResource fr = new FileResource();
CSVParser parser = fr.getCSVParser();
listExporters(parser,"gold");
};
public void tester() {
FileResource fr = new FileResource();
CSVParser parser = fr.getCSVParser();  

String countryInformation = countryInfo(parser, "Germany");
System.out.println(countryInformation);
//String countryWithTwoExports = listExportersTwoProducts(parser, "gold", "diamonds");
//System.out.println(countryWithTwoExports);
};

public void listExportersTwoProducts(CSVParser parser, String exportItem1, String exportItem2) {
    CSVParser parser = fr.getCSVParser();
    for (CSVRecord record : parser) {
    String country = record.get("Country");    
    String export = record.get("Exports");
    
    if (export.contains(exportItem1) && export.contains(exportItem2)) {
        System.out.println("The country " + country + " exports both items.");
    };
};
};

public int numberOfExporters(CSVParser parser, String exportItem) {
    CSVParser = fr.getCSVParser();
    int totalCountries = 0;
    for (CSVRecord record : parser) {
      String country = record.get("Country");
      String export = record.get("Exports");
      
      if (export.contains(exportItem)) {
          totalCountries++;
        };
    };
    return totalCountries;
};

public void bigExporters(CSVParser parser, String amount){
    CSVParser = fr.getCSVParser();
    for (CSVRecord record : parser) {
       String country = record.get("Country");
       String export = record.get("Exports");
       String value = record.get("Value (dollars)");
       if (value.length() > amount.length()) {
           System.out.println(country + " " + value);
          
        };
    };
    
};

public String countryInfo(CSVParser parser, String country) {
    FileResource fr = new FileResource();
    CSVParser parser = fr.getCSVParser();
    for (CSVRecord record : parser) {
    String countryName = record.get("Country");
    if (countryName.contains(country)) {
    String countryExports = record.get("Exports");
    String value = record.get("Value (dollars)");
    String allDetails = country + ": " + countryExports + ": " + value;
    return allDetails;
    };
   String countryNotFound = "The country requested does not exist.";
   return countryNotFound;
}
}
}
